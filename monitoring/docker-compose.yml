version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      # - "--web.external-url=https://${DOMAIN}/prometheus"
      # - "--web.route-prefix=/prometheus"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.${DOMAIN}`)"
      # - "traefik.http.routers.prometheus.rule=Host(`${DOMAIN}`) && PathPrefix(`/prometheus`)"
      # - "traefik.http.middlewares.prometheus-strip.stripprefix.prefixes=/prometheus"
      # - "traefik.http.routers.prometheus.middlewares=prometheus-strip"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      # - "traefik.http.routers.prometheus.priority=10"
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      # - GF_SERVER_ROOT_URL=https://${DOMAIN}/grafana/
      # - GF_SERVER_SERVE_FROM_SUB_PATH=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)"
      # - "traefik.http.routers.grafana.rule=Host(`${DOMAIN}`) && PathPrefix(`/grafana`)"
      # - "traefik.http.middlewares.grafana-strip.stripprefix.prefixes=/grafana"
      # - "traefik.http.routers.grafana.middlewares=grafana-strip"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      # - "traefik.http.routers.grafana.priority=10"
    ports:
      - "3000:3000"
    networks:
      - app-network

  loki:
    image: grafana/loki:3.0.0
    container_name: loki
    command: -config.file=/mnt/config/loki-config.yaml
    user: "10001:10001"
    volumes:
      - ./loki-config.yaml:/mnt/config/loki-config.yaml
      - ./data:/mnt/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.loki.rule=Host(`loki.${DOMAIN}`)"
      - "traefik.http.routers.loki.entrypoints=websecure"
      - "traefik.http.routers.loki.tls=true"
      - "traefik.http.routers.loki.tls.certresolver=myresolver"
      - "traefik.http.services.loki.loadbalancer.server.port=3100"
    ports:
      - "3100:3100"
    networks:
      - app-network

  promtail:
    image: grafana/promtail:3.0.0
    container_name: promtail
    command: -config.file=/mnt/config/promtail-config.yaml
    volumes:
      - ./promtail-config.yaml:/mnt/config/promtail-config.yaml
      - /var/log:/var/log
    networks:
      - app-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    command:
      - --docker_only=true
      - --store_container_labels=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.${DOMAIN}`)"
      - "traefik.http.routers.cadvisor.entrypoints=websecure"
      - "traefik.http.routers.cadvisor.tls=true"
      - "traefik.http.routers.cadvisor.tls.certresolver=myresolver"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"
    ports:
      - "8085:8080"
    env_file:
      - .env
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
